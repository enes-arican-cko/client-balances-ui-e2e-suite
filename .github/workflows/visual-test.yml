name: 🔎 Visual Tests (Daily)
run-name: Visual Tests | ${{ inputs.env == '' && 'SBOX' || inputs.env}}
on:
  workflow_dispatch:
    inputs:
      env:
        description: "Env"
        required: true
        default: "SBOX"
        type: choice
        options:
          - "SBOX"
          - "QA"
jobs:

  visual-tests:
    name: 🔎 Visual Test | ${{ matrix.project }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: chromium
            os: ubuntu-latest
            cache_dir: ~/.cache/ms-playwright

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4.1.1

      - name: 🏗️ Setup node
        uses: actions/setup-node@v4.0.1
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: ⚡️ Cache NPM dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

      - name: ⚡️ Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ${{ matrix.cache_dir }}
          key: ${{ runner.os }}-${{ matrix.project }}-pw-${{ hashFiles('**/.playwright-version') }}

      - name: 📥 Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm install --save-dev @playwright/test && \
          npx playwright --version > .github/.playwright-version

      - name: 📥 Install ${{ matrix.project }} with Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps ${{ matrix.project }}

      - name: 🎭 Run Playwright visual tests
        run: |
          echo "Using Playwright $(npx playwright --version)" && echo "*******************************"
          TEST_ENV=${{ inputs.env == '' && 'SBOX' || inputs.env}} npm run test:visual

      - name: ⬆️ Uploading blob report artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: all-blob-reports
          path: blob-report/
          retention-days: 1

  merge-reports-and-upload:
    name: 📊 Publish Test Report
    if: always()
    needs: [visual-tests]
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4.1.1

      - name: 🏗️ Setup node
        uses: actions/setup-node@v4.0.1
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: ⚡️ Cache NPM dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

      - name: 📥 Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm install --save-dev @playwright/test && \
          npx playwright --version > .github/.playwright-version
      
      - name: 📥 Install ${{ matrix.project }} with Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps ${{ matrix.project }}

      - name: ⏱️ Set a timestamp
        id: timestampid
        run: echo "timestamp=$(date --utc +%d%m%Y_%H%M%SZ)" >> "$GITHUB_OUTPUT"

        # Download the reports uploaded previously to merge them and create a single html report
      - name: ⬇️ Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: all-blob-reports # name of the file stored as artifact (as uploaded at the previous job)
          path: downloaded-blob-reports # name of the folder where the download will be saved

      # Playwright will generate a report and store it inside a folder called '/playwright-report'
      - name: 🔄 Merge the reports into a single HTML Report
        run: npx playwright merge-reports --reporter html ./downloaded-blob-reports

      - name: 📊 Upload HTML report
        id: artifact-upload-step
        uses: actions/upload-artifact@v3
        with:
          name: html-report-${{ inputs.env == '' && 'SBOX' || inputs.env}}_${{ steps.timestampid.outputs.timestamp }}
          path: playwright-report
          retention-days: 7